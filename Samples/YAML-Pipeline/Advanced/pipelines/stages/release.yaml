stages:
- stage: Deploy_${{parameters.environmentName}}
  condition: ${{parameters.condition}} 
  variables:
    - template: ../variables/base.yaml
    - template: ../variables/${{parameters.environmentName}}.yaml

  jobs:
  - deployment: Deploy_${{parameters.environmentName}}

    pool:
      vmImage: ${{parameters.pool}}

    environment: 'YourApp-${{parameters.environmentName}}'
    strategy:
      runOnce:
        deploy:
          steps:

          - task: Set-Azure-AD-Application@3
            displayName: 'Set Azure AD Application'
            name: app
            inputs:
              azureSubscription: 'subscription name'
              createIfNotExist: true
              name: '$(APPLICATION_NAME)'
              appIdUri: 'https://$(TENANTID)/$(APPLICATION_NAME)'
              homePageUrl: 'https://YourHomePage.com'
              logoutUrl: 'https://YourLogoutUrl.com'
              termsOfServiceUrl: 'https://YourTermsUrl.com'
              privacyStatementUrl: 'https://YourPrivacyStatementUrl.com'
              multiTenant: false
              replyUrlsMethod: 'Multiline'
              replyUrlsMultiLine: 'https://YourReplyUrl.com'
              resourceAccessFilePath: '$(Pipeline.Workspace)/drop/RequiredResourceAccess.json'
              appRolesFilePath: '$(Pipeline.Workspace)/drop/AppRoles.json'
              ownersMethod: 'Singleline'
              ownersSingleLine: '$(APPLICATION_OWNERS)'
              secrets: '[{ ''Description'': ''testkey'', ''EndDate'': ''01/12/2019'' }]'
              oauth2AllowImplicitFlow: false
              appRoleAssignmentRequired: false

          - powershell: |
              Write-Host "ObjectId- $(app.ObjectId)"
              Write-Host "ApplicationId- $(app.ApplicationId)"
              Write-Host "Name- $(app.Name)"
              Write-Host "AppIdUri- $(app.AppIdUri)"
              Write-Host "HomePageUrl- $(app.HomePageUrl)" 
              Write-Host "ServicePrincipalObjectId- $(app.ServicePrincipalObjectId)"
              Write-Host "The Secret with the name 'testkey'- $(app.Secret.testkey)"
            displayName: 'Print output variables'

          - task: Remove-Azure-AD-Application@3
            displayName: 'Remove Azure AD Application'
            inputs:
              azureSubscription: 'subscription name'
              method: 'ObjectId'
              objectId: '$(app.ObjectId)'
